%
\ProvidesPackage{prodrive/package/pdtest}[2014/12/18 Prodrive QRD Automation macros]
%%%
% README
%
% This package uses the pgfkeys package as (key-value) storage and the following paths are used:
% /pdTest                                      : "Namespace"
% /pdTest/<test id>/result                     : Test result for <test id>
% /pdTest/<test id>/title/result               : Result displayed in the title for <test id>
% /pdTest/<test id>/setup/<setup>/result       : <setup> result for <test id>
% /pdTest/<test id>/<setup>/step/<step>/result}: <test id>/<setup> result for <step>
% /pdTest/info/<name>                          : Info stored for <name>
% /pdTest/info/<step>/<name>                   : Info stored for <setup>/<name>
%%
\RequirePackage{xstring}
\RequirePackage{etoolbox}
\RequirePackage{pgfkeys}

%%
% Defaults
%%

\providecommand{\pdTestMethodTemplate}{\TODO{No methods available}}
\providecommand{\pdTestMethodFile}{method/tex/\pdTestCurrent.tex}
\providecommand{\pdTestExpectedResultsTemplate}{\TODO{No expected results}}
\providecommand{\pdTestExpectedResultsFile}{expected/tex/\pdTestCurrent.tex}
\providecommand{\pdTestResultsTemplate}{\TODO{No results}}
\providecommand{\pdTestResultsFile}{results/tex/\pdTestCurrent.tex}
\providecommand{\pdTestNoResultText}{TBD}
\newcommand{\pdTestColoredTBD}{\pdTestColorResult{\pdTestNoResultText}}

% pdTestColorResult, Color test result
% #1: Test result (TBD/PASS/FAIL)
%     TBD:  Will be represented colored TBD
%     PASS: Will be represented green [PASS]
%     FAIL: Will be represented red [FAIL]
\newcommand{\pdTestColorResult}[1]{%
	\IfEqCase{#1}{%
		{TBD}{\TBD{[TBD]}}
		{PASS}{\PASS{[PASS]}}
		{FAIL}{\FAIL{[FAIL]}}}[#1]}

%%%
% pdTest title result
%%%

% Calculate title result from /pdTest/<test id>/result
% 1: Test id
\newcommand{\pdTestSetTitleResult}[1]{%
	\pgfkeysifdefined{/pdTest/#1/result}{%
		\IfEqCase{\pgfkeysvalueof{/pdTest/#1/result}}{%
			{TBD}{\pgfkeyssetvalue{/pdTest/#1/title/result}{\PASS{[PASS]} / \FAIL{[FAIL]}}}
			{PASS}{\pgfkeyssetvalue{/pdTest/#1/title/result}{\PASS{[PASS]}}}
			{FAIL}{\pgfkeyssetvalue{/pdTest/#1/title/result}{\FAIL{[FAIL]}}}
		}[~]
	}{\pgfkeyssetvalue{/pdTest/#1/title/result}{\PASS{[PASS]} / \FAIL{[FAIL]}}}
}

% 1: Test id
\newcommand{\pdTestGetTitleResult}[1]{%
	\pgfkeysifdefined{/pdTest/#1/title/result}{%
		\pgfkeysvalueof{/pdTest/#1/title/result}
	}{\PASS{[PASS]} / \FAIL{[FAIL]}}
}

%%%
%% pdTest current test
%%%

% pdTestSetCurrent, Set current default values so all command exist
%  It will set the macro pdTestCurrent to the testid
% #1: Test ID
\newcommand{\pdTestSetCurrent}[1]{%
	\providecommand{\pdTestCurrent}{#1}
	\renewcommand{\pdTestCurrent}{#1}
}

%%%
%% pdTest current setup
%%%

% pdTestSetCurrentSetup, Set pdTestCurrentSetup macro
%  It will set the macro pdTestCurrentSetup to <setup>
% #1: Setup (e.g "e500v2-buildroot-stable")
\newcommand{\pdTestSetCurrentSetup}[1]{%
	\providecommand{\pdTestCurrentSetup}{#1}
	\renewcommand{\pdTestCurrentSetup}{#1}
}

%%%
%% pdTest test result
%%%

% 1: Test id
% 2: Result
\newcommand{\pdTestSetResult}[2]{%
	\pgfkeyssetvalue{/pdTest/#1/result}{#2}
}

% 1: Test id
\newcommand{\pdTestGetResult}[1]{%
	\pgfkeysifdefined{/pdTest/#1/result}{%
		\pgfkeysvalueof{/pdTest/#1/result}
	}{\pdTestNoResultText}
}

% 1: Test id
\newcommand{\pdTestGetColoredResult}[1]{%
	\pgfkeysifdefined{/pdTest/#1/result}{%
		\pdTestColorResult{\pgfkeysvalueof{/pdTest/#1/result}}
	}{\pdTestColoredTBD}
}

%%%
%% pdTest setup result
%%%

% 1: Test id
% 2: Setup
% 3: Result
\newcommand{\pdTestSetSetupResult}[3]{%
	\pgfkeyssetvalue{/pdTest/#1/setup/#2/result}{#3}
}

% 1: Test id
% 2: Setup
\newcommand{\pdTestGetSetupResult}[2]{%
	\pgfkeysifdefined{/pdTest/#1/setup/#2/result}{%
		\pgfkeysvalueof{/pdTest/#1/setup/#2/result}
	}{\pdTestNoResultText}
}

% 1: Test id
% 2: Setup
\newcommand{\pdTestGetColoredSetupResult}[2]{%
	\pgfkeysifdefined{/pdTest/#1/setup/#2/result}{%
		\pdTestColorResult{\pgfkeysvalueof{/pdTest/#1/setup/#2/result}}
	}{\pdTestColoredTBD}
}

%%%
%% pdTest step result
%%%

% 1: Test id
% 2: Setup
% 3: Step
% 3: Result
\newcommand{\pdTestSetStepResult}[4]{%
	\pgfkeyssetvalue{/pdTest/#1/#2/step/#3/result}{#4}
}

% 1: Test id
% 2: Setup
% 3: Step
\newcommand{\pdTestGetStepResult}[3]{%
	\pgfkeysifdefined{/pdTest/#1/#2/step/#3/result}{%
		\pgfkeysvalueof{/pdTest/#1/#2/step/#3/result}
	}{\pdTestNoResultText}
}

% 1: Test id
% 2: Setup
% 3: Step
\newcommand{\pdTestGetColoredStepResult}[3]{%
	\pgfkeysifdefined{/pdTest/#1/#2/step/#3/result}{%
		\pdTestColorResult{\pgfkeysvalueof{/pdTest/#1/#2/step/#3/result}}
	}{\pdTestColoredTBD}
}

%%%
%% pdTest info
%%%

% 1: Name
% 2: Value
\newcommand{\pdTestSetInfo}[2]{%
	\pgfkeyssetvalue{/pdTest/info/#1}{#2}
}

% 1: Test id
\newcommand{\pdTestGetInfo}[1]{%
	\pgfkeysifdefined{/pdTest/info/#1}{%
		\pgfkeysvalueof{/pdTest/info/#1}
	}{\pdTestNoResultText}
}

%%%
%% pdTest setup info
%%%

% #1: Setup
% #2: Name
% #3: Value
\newcommand{\pdTestSetSetupInfo}[3]{%
	\pgfkeyssetvalue{/pdTest/info/#1/#2}{#3}
}

% 1: Setup
% 2: Name
\newcommand{\pdTestGetSetupInfo}[2]{%
	\pgfkeysifdefined{/pdTest/info/#1/#2}{%
		\pgfkeysvalueof{/pdTest/info/#1/#2}
	}{\pdTestNoResultText}
}

%%%
% Defaults
%%%

\pdTestSetCurrent{<test id>}
\pdTestSetCurrentSetup{<setup>}

% pdTestTable, Default table for use after pdTest
\providecommand{\pdTestTable}{%
	\begin{pdtabular}{l|p{3cm}|p{4cm}|l|p{4cm}}
		\pdtablerow{Initials & \pdTestGetInfo{\pdTestCurrent-Initials} &  & SN & \pdTestGetInfo{\pdTestCurrent-SN}}
		\pdtablerow{Date     & \pdTestGetInfo{\pdTestCurrent-Date}     &  & POC release & \pdTestGetInfo{\pdTestCurrent-POC-release}}
	\end{pdtabular}
	\par\medskip
}

%%%
% Public
%%%

% pdTestLoadFile, Load input file if exists
% #1: Path to file to be used as \input
\newcommand{\pdTestLoadFile}[1]{%
	\IfFileExists{#1}{%
		\input{#1}
	}{%
		\PackageWarning{pdtest}{File #1 doesn't exist}
	}
}

% Create test title
% #1: Title type (\chapter, \section (default), \subsection, \subsubsection)
% #2: Test ID
% #3: Title
\newcommand{\pdTest}[3][\section]{%
	\pdTestSetTitleResult{#2}
	\pdTestSetCurrent{#2}
	\ifcsname pdTestBeginHook\endcsname
		\pdTestBeginHook{}
	\fi
	{#1{#3 \pdTestGetTitleResult{#2}}\label{#2}}
}

% Create test title environment
% #1: Title type (\chapter, \section (default), \subsection, \subsubsection)
% #2: Test ID
% #3: Title
\newenvironment{pdtest}[3][\section]{%
	\listcsgadd{pdtestlist}{#2}
	\pdTestSetTitleResult{#2}
	\pdTestSetCurrent{#2}
	\ifcsname pdTestBeginHook\endcsname
		\pdTestBeginHook{}
	\fi
	{#1{#3 \pdTestGetTitleResult{#2}}\label{#2}}
}{%
	\ifcsname pdTestEndHook\endcsname
		\pdTestEndHook{}
	\fi
}

%%%
% Layout
%%%

\newcommand{\pdTestGoal}{%
	\pdunderline{Goal:}
}
\newcommand{\pdTestPreConditions}{%
	\pdunderline{Pre-conditions:}
}
\newcommand{\pdTestMethod}{%
	\pdunderline{Method:}
}
\newcommand{\pdTestExpectedResults}{%
	\pdunderline{Expected results:}
}
\newcommand{\pdTestResults}{%
	\pdunderline{Results:}
}
\newcommand{\pdTestConclusion}{%
	\pdunderline{Conclusion:}
}

%%%
% Results
%%%

% pdTestGetMethod
% Try to load the method from a file
% Or try to output the method template
\newcommand{\pdTestGetMethod}{%
	\pdTestMethod{}
	\IfFileExists{\pdTestMethodFile}{%
		\input{\pdTestMethodFile}
	}{%
		\pdTestMethodTemplate{}
	}
}

% pdTestExpectedResults, Output the expected results.
\newcommand{\pdTestGetExpectedResults}{%
	\pdTestExpectedResults{}
	\IfFileExists{\pdTestExpectedResultsFile}{%
		\input{\pdTestExpectedResultsFile}
	}{%
		\pdTestExpectedResultsTemplate{}
	}
}

% pdTestResults, Output the test results
\newcommand{\pdTestGetResults}{%
	\pdTestResults{}
	\IfFileExists{\pdTestResultsFile}{%
		\input{\pdTestResultsFile}
	}{%
		\pdTestResultsTemplate{}
	}
}

%%%
% Summary
%%%
\newcommand{\pdTestSummary}{%
	\chapter{Test Summary}
	\begingroup
		\newcommand\tablecontents{}
		\def\do##1{\appto\tablecontents{\pdtablerow{##1 & \pdTestGetTitle{##1} & \pdTestGetColoredResult{##1}}}}
		\dolistcsloop{pdtestlist}
		\begin{pdtabularx}{\textwidth}{l|X|c}
			\pdtablehead{TestID & Title & Result}
			\tablecontents
		\end{pdtabularx}
	\endgroup
}

%%%
% Test step counters
%%%

% Host/agent counter
\newcounter{pdTestHostCounter}
\newcommand{\pdTestHost}{%
	H\thepdTestHostCounter
	\stepcounter{pdTestHostCounter}
}
\newcommand{\pdTestHostReset}{%
	\setcounter{pdTestHostCounter}{1}
}

\newcounter{pdTestAgentCounter}
\newcommand{\pdTestAgent}{%
	A\thepdTestAgentCounter
	\stepcounter{pdTestAgentCounter}
}
\newcommand{\pdTestAgentReset}{%
	\setcounter{pdTestAgentCounter}{1}
}

% Master/slave counter
\newcounter{pdTestMasterCounter}
	\newcommand{\pdTestMaster}{%
	M\thepdTestMasterCounter\stepcounter{pdTestMasterCounter}
}
\newcommand{\pdTestMasterReset}{%
	\setcounter{pdTestMasterCounter}{1}
}

\newcounter{pdTestSlaveCounter}
\newcommand{\pdTestSlave}{%
	S\thepdTestSlaveCounter
	\stepcounter{pdTestSlaveCounter}
}
\newcommand{\pdTestSlaveReset}{%
	\setcounter{pdTestSlaveCounter}{1}
}

% Sender/Receiver counter
\newcounter{pdTestSenderCounter}
\newcommand{\pdTestSender}{%
	S\thepdTestSenderCounter
	\stepcounter{pdTestSenderCounter}
}
\newcommand{\pdTestSenderReset}{%
	\setcounter{pdTestSenderCounter}{1}
}

\newcounter{pdTestReceiverCounter}
\newcommand{\pdTestReceiver}{%
	R\thepdTestReceiverCounter
	\stepcounter{pdTestReceiverCounter}
}
\newcommand{\pdTestReceiverReset}{%
	\setcounter{pdTestReceiverCounter}{1}
}

% Simple test step
\newcounter{pdTestStepCounter}
\newcommand{\pdTestStep}{%
	\thepdTestStepCounter
	\stepcounter{pdTestStepCounter}
}
\newcommand{\pdTestStepReset}{%
	\setcounter{pdTestStepCounter}{1}
}

\newcommand{\pdTestResetAllTestStepCounters}{%
	\pdTestHostReset{}
	\pdTestAgentReset{}
	\pdTestMasterReset{}
	\pdTestSlaveReset{}
	\pdTestSenderReset{}
	\pdTestReceiverReset{}
	\pdTestStepReset{}
}

% Reset all available counters at begin of document
\pdTestResetAllTestStepCounters{}
